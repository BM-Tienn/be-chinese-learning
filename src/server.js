const dotenv = require('dotenv');
const app = require('./app');

// Load environment variables
dotenv.config();

// Import socket service
const socketService = require('./services/socketService');

// Get port from environment or use default
const PORT = process.env.PORT || 5678;

// Start server
const server = app.listen(PORT, () => {
  console.log(`ðŸš€ Server Ä‘ang cháº¡y trÃªn port ${PORT}`);
  console.log(`ðŸ“š Environment: ${process.env.NODE_ENV || 'development'}`);
  console.log(`ðŸ”— API Documentation: http://localhost:${PORT}/api-docs`);
  console.log(`ðŸ’š Health Check: http://localhost:${PORT}/health`);
});

// Initialize Socket.IO service
socketService.initialize(server);

// Handle unhandled promise rejections
process.on('unhandledRejection', (err) => {
  console.log('ðŸ’¥ UNHANDLED REJECTION! ðŸ’¥ Shutting down...');
  console.log(err.name, err.message);
  console.log(err.stack);
  server.close(() => {
    process.exit(1);
  });
});

// Handle uncaught exceptions
process.on('uncaughtException', (err) => {
  console.log('ðŸ’¥ UNCAUGHT EXCEPTION! ðŸ’¥ Shutting down...');
  console.log(err.name, err.message);
  console.log(err.stack);
  process.exit(1);
});

// Graceful shutdown handlers
process.on('SIGTERM', () => {
  console.log('ðŸ‘‹ SIGTERM received. Shutting down gracefully...');
  server.close(() => {
    console.log('ðŸ’¥ Process terminated!');
    process.exit(0);
  });
});

process.on('SIGINT', () => {
  console.log('ðŸ‘‹ SIGINT received. Shutting down gracefully...');
  server.close(() => {
    console.log('ðŸ’¥ Process terminated!');
    process.exit(0);
  });
}); 